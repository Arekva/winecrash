<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L5JEQhAjzwAAAABJRU5ErkJggg==
</value>
  </data>
</root>